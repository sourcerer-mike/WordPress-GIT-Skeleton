<?xml version="1.0"?>
<project name="WordPress Instance" default="WordPress" basedir="." description="Get WordPress">

    <property name="application.cacheDir" value="var/cache/PHing"/>

    <if>
        <available file="${phing.dir}/PHing.ini"/>
        <then>
            <property file="${phing.dir}/PHing.ini" override="true"/>
        </then>
    </if>
    <if>
        <available file="${phing.dir}/PHing.local.ini"/>
        <then>
            <property file="${phing.dir}/PHing.local.ini" override="true"/>
        </then>
    </if>

    <target name="prepare">
        <mkdir dir="${application.cacheDir}" mode="755"/>
    </target>

    <target name="WordPress.prepare" hidden="true" depends="prepare">
        <propertyprompt promptText="What is the Download URL (zip)?" propertyName="WordPress.URL"
                        useExistingValue="true"/>

        <php returnProperty="WordPress.URL.BaseName" expression="basename('${WordPress.URL}')" level="debug"/>

        <php returnProperty="WordPress.firewallPlugin.basename"
             expression="basename('${WordPress.firewallPlugin}')"
             level="debug"/>

        <property name="WordPress.cacheDir" value="${application.cacheDir}/WordPress"/>
        <mkdir dir="${WordPress.cacheDir}"/>
        <property name="WordPress.cacheFile" value="${WordPress.cacheDir}/${WordPress.URL.BaseName}"/>

        <property name="WordPress.destinationDir" value="${project.basedir}/WordPress"/>
        <mkdir dir="${WordPress.destinationDir}"/>

        <property name="WordPress.baseUrl.path" value="/"/>

        <property name="WordPress.config.tablePrefix" value="wp_" />

        <if>
            <not>
                <isset property="WordPress.config.uniquePhrase" />
            </not>
            <then>
                <php expression="md5(rand())" returnProperty="WordPress.config.uniquePhrase" level="debug"/>
            </then>
        </if>
        <property name="WordPress.config.databaseName" value="wordpress" />
        <property name="WordPress.config.databaseUser" value="wordpress" />
        <property name="WordPress.config.databasePass" value="" />
        <property name="WordPress.config.databaseHost" value="localhost" />
    </target>

    <target name="WordPress" depends="WordPress.prepare">

        <!-- Download WordPress -->
        <if>
            <not>
                <available file="${WordPress.cacheFile}"/>
            </not>
            <then>
                <httpget dir="${WordPress.cacheDir}" url="${WordPress.URL}"/>
            </then>
            <else>
                <echo message="Use cached ${WordPress.URL.BaseName}" level="info"/>
            </else>
        </if>

        <!-- Extract WordPress -->
        <if>
            <not>
                <available file="${WordPress.cacheDir}/wordpress"/>
            </not>
            <then>
                <unzip todir="${WordPress.cacheDir}" file="${WordPress.cacheFile}"/>
            </then>
        </if>

        <!-- Copy cached WordPress -->
        <copy todir="${WordPress.destinationDir}">
            <fileset dir="${WordPress.cacheDir}/wordpress">
                <include name="**"/>
                <exclude name="liesmich.html"/>
                <exclude name="readme.html"/>
                <exclude name="wp-content/plugins/akismet/"/>
                <exclude name="wp-content/plugins/hello.php"/>
            </fileset>
        </copy>

        <!-- Hardening WordPress -->
        <phingcall target="WordPress.secure" />
    </target>

    <target name="WordPress.clear" depends="WordPress.prepare">
        <delete dir="${WordPress.cacheDir}" />

        <input message="Want to delete the whole WordPress" propertyName="WordPress.deleteAll" validArgs="y,n"
               defaultValue="n" promptChar="?"/>
        <delete dir="${WordPress.destinationDir}"/>
    </target>

    <target name="WordPress.secure" depends="WordPress.prepare">
        <delete file="${WordPress.destinationDir}/wp-sample-config.php" quiet="true"/>

        <echo message="Set permissions for directories and files ..."/>
        <echo message="Set directory permission to 2755" level="verbose"/>
        <exec command="find ${WordPress.destinationDir} -type d -exec chmod 2755 {} \;" />

        <echo message="Set file permission to 644" level="verbose"/>
        <exec command="find ${WordPress.destinationDir} -type f -exec chmod 644 {} \;" />

        <chmod mode="1750" file="${WordPress.destinationDir}/wp-admin" />
        <chmod mode="1750" file="${WordPress.destinationDir}/wp-includes" />
        <chmod mode="0770" file="${WordPress.destinationDir}/wp-content" />

        <copy file="${phing.dir}/PHing/WordPress.htaccess" tofile="${WordPress.destinationDir}/.htaccess">
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <copy file="${phing.dir}/PHing/WordPress.wp-config.php" tofile="${WordPress.destinationDir}/wp-config.php">
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <if>
            <isset property="WordPress.firewallPlugin"/>
            <then>
                <if>
                    <not>
                        <available file="${WordPress.cacheDir}/${WordPress.firewallPlugin.basename}"/>
                    </not>
                    <then>
                        <httpget dir="${WordPress.cacheDir}"
                                 url="${WordPress.firewallPlugin}"/>
                    </then>
                </if>

                <unzip todir="${WordPress.destinationDir}/wp-content/plugins"
                       file="${WordPress.cacheDir}/${WordPress.firewallPlugin.basename}"/>
            </then>
            <else>
                <echo message="No Firewall-Plugin choosen! Please remember installing one to harden WordPress."
                      level="warning"/>
            </else>
        </if>
    </target>
</project>
